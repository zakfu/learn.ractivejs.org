{"copy":"<p>It's possible to define custom events in <span class='logo'>Ractive.js</span>. You use them just like normal events:</p>\n\n<pre class='prettyprint lang-html'>\n&lt;button on-tap='activate'&gt;Activate!&lt;/button&gt;\n</pre>\n\n<p>Note that we're using <code>on-tap</code> here instead of <code>on-click</code> &ndash; <code>tap</code> is a custom event.</p>\n\n<aside>\n\t<p>Custom events are distributed as plugins, <a href='http://docs.ractivejs.org/latest/plugins'>which can be downloaded from here</a> to include in your project.</p>\n\n\t<p>You can also create your own plugins &ndash; just <a href='http://docs.ractivejs.org/latest/writing-event-plugins'>follow the instructions on the docs</a>.</p>\n</aside>\n\n<p>The trouble with <code>click</code> is that it's nonsense. If you put your mouse down on the 'activate' button, waggle it about, then lift your finger up after a few seconds, the browser will in most cases consider it a 'click'. I don't. Do you?</p>\n\n<p>Furthermore, if your interface needs to work on touch devices, using <code>click</code> means a 300ms delay between the <code>touchstart</code>-<code>touchend</code> sequence event and the simulated <code>mousedown</code>-<code>mouseup</code>-<code>click</code> sequence.</p>\n\n<p>The <code>tap</code> event corrects for both of these anomalies. Try replacing the <code>click</code> proxies in the template.</p>\n","init":true,"javascript":"var ractive = new Ractive({\n  el: output,\n  template: template\n});\n\nlistener = ractive.on({\n  activate: function () {\n    alert( 'Activating!' );\n  },\n  deactivate: function () {\n    alert( 'Deactivating!' );\n  },\n  silence: function () {\n  \talert( 'No more alerts!' );\n  \tlistener.cancel();\n  }\n});","template":"<button on-click='activate'>Activate!</button>\n<button on-click='deactivate'>Deactivate!</button>\n<button on-click='silence'>Silence!</button>","fixed":{"template":"<button on-tap='activate'>Activate!</button>\n<button on-tap='deactivate'>Deactivate!</button>\n<button on-tap='silence'>Silence!</button>"},"index":3,"numSiblings":4,"tutorialTitle":"Event proxies","tutorialIndex":3}