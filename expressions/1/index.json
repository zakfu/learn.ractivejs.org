{"copy":"<p>One problem with the last example &ndash; the population number. Printing out a number like 63230000 just looks a bit daft.</p>\n\n<p>We <em>could</em> replace the number with a string, like '63.2 million'. But numbers are generally a hell of a lot easier to work with.</p>\n\n<p>Instead, we can use an <em>expression</em>. Expressions look just like regular mustaches:</p>\n\n<pre class='prettyprint lang-html'>\n{{ format(population) }}\n</pre>\n\n<p>Add a <code>format</code> property alongside the country data (it may seem weird adding a function as 'data', but it will make sense in due course!):</p>\n\n<pre class='prettyprint lang-js'>\nfunction ( num ) {\n  if ( num > 1000000000 ) return ( num / 1000000000 ).toFixed( 1 ) + ' billion';\n  if ( num > 1000000 ) return ( num / 1000000 ).toFixed( 1 ) + ' million';\n  if ( num > 1000 ) return ( Math.floor( num / 1000 ) ) + ',' + ( num % 1000 );\n  return num;\n}\n</pre>\n\n<p>Execute the code. Doesn't that look better? Try changing the values.</p>\n\n<textarea class='interactive'>\nractive.set({\n  country: 'China',\n  population: 1351000000\n});\n</textarea>\n\n<aside>\n\t<p>Note that expressions are not part of the mustache syntax &ndash; they are specific to <span class='logo'>Ractive.js</span>.</p>\n</aside>\n","init":true,"javascript":"var ractive = new Ractive({\n  el: output,\n  template: template,\n  data: {\n    country: 'the UK',\n    population: 63230000\n  }\n});\n","template":"<p>The population of {{country}} is {{population}}.</p>","fixed":{"javascript":"var ractive = new Ractive({\n  el: output,\n  template: template,\n  data: {\n    country: 'the UK',\n    population: 63230000,\n    format: function ( num ) {\n      if ( num > 1000000000 ) return ( num / 1000000000 ).toFixed( 1 ) + ' billion';\n      if ( num > 1000000 ) return ( num / 1000000 ).toFixed( 1 ) + ' million';\n      if ( num > 1000 ) return ( Math.floor( num / 1000 ) ) + ',' + ( num % 1000 );\n      return num;\n    }\n  }\n});\n","template":"<p>The population of {{country}} is {{ format(population) }}.</p>"},"index":0,"numSiblings":3,"tutorialTitle":"Expressions","tutorialIndex":2}