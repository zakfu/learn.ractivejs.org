{"copy":"<p>So far, we've only updated text content within a ractive. But we can use the same <a href='http://mustache.github.io/'>mustache syntax</a> to update element <em>attributes</em>.</p>\n\n<p>Let's add a style attribute to our <code>&lt;p&gt;</code> element:</p>\n\n<pre class='prettyprint lang-html'>\n&lt;p style='color: {{color}}; font-size: {{size}}em; font-family: {{font}};'&gt;\n  {{greeting}} {{name}}!\n&lt;/p&gt;\n</pre>\n\n<p>Now we just need to add some data:</p>\n\n<pre class='prettyprint lang-js'>\nvar ractive = new Ractive({\n  el: output,\n  template: template,\n  data: {\n    greeting: 'Hello',\n    name: 'world',\n    color: 'purple',\n    size: 4,\n    font: 'Georgia'\n  }\n});\n</pre>\n\n<p>Execute this code. You should see a large purple 'Hello world!' message written in Arial.</p>\n\n<p>And, of course, we can update this attribute. Try running this code:</p>\n\n<textarea class='interactive'>\nractive.set({\n  color: 'red',\n  font: 'Comic Sans MS'\n});\n</textarea>\n\n<aside>\n\t<p>Note that even though we're changing three properties, Ractive recognises that they all belong to the same attribute, and only touches the DOM once.</p>\n</aside>\n","init":true,"javascript":"var ractive = new Ractive({\n  el: output,\n  template: template,\n  data: { greeting: 'Hello', name: 'world' }\n});\n","template":"<p>{{greeting}} {{name}}!</p>\n","fixed":{"javascript":"var ractive = new Ractive({\n  el: output,\n  template: template,\n  data: {\n  \tgreeting: 'Hello',\n  \tname: 'world',\n  \tcolor: 'purple',\n  \tsize: 4,\n  \tfont: 'Georgia'\n  }\n});\n","template":"<p style='color: {{color}}; font-size: {{size}}em; font-family: {{font}};'>\n  {{greeting}} {{name}}!\n</p>\n"},"index":3,"numSiblings":5,"tutorialTitle":"Hello world!","tutorialIndex":0,"styles":"#output-block p {\n\tfont-size: 2em;\n\tline-height: 1;\n\tmargin: 0 0 0.2em 0;\n}\n"}