{"copy":"<p>Let's say we want to update a nested property. If we'd stored a reference to our <em>model object</em>, we could do it like this:</p>\n\n<pre class='prettyprint lang-js'>\n// we didn't store a reference, so let's do it now\nvar country = ractive.get('country');\n\ncountry.climate.rainfall = 'very high';\nractive.update('country');\n</pre>\n\n<p><span class='logo'>Ractive</span> will recognise that only the <code>rainfall</code> property has changed, and leave everything else untouched.</p>\n\n<p>But there's an easier way to do it:</p>\n\n<pre class='prettyprint lang-js'>\nractive.set('country.climate.rainfall', 'very high');\n</pre>\n\n<p>Try changing properties. (If you're not from the UK, suitable values for <code>rainfall</code> include 'near-constant', 'unnecessarily high', or 'an unholy amount of'.)</p>\n\n<textarea class='interactive'>\nractive.set('country.climate.rainfall', 'very high');\n</textarea>\n","init":true,"javascript":"var ractive = new Ractive({\n  el: output,\n  template: template,\n  data: {\n    country: {\n      name: 'The UK',\n      climate: { temperature: 'cold', rainfall: 'excessive' },\n      population: 63230000,\n      capital: { name: 'London', lat: 51.5171, lon: -0.1062 }\n    }\n  }\n});\n","template":"<h2>Country profile</h2>\n\n{{#with country}}\n  <p>{{name}} is a {{climate.temperature}} country with {{climate.rainfall}} rainfall and a population of {{population}}.</p>\n\n  {{#with capital}}\n    <p>The capital city is {{name}} (<a href='https://maps.google.co.uk/maps/place/{{name}}/@{{lat}},{{lon}},12z' target='_blank'>see map</a>).</p>\n  {{/with}}\n\n{{/with}}\n","index":2,"numSiblings":3,"tutorialTitle":"Nested properties","tutorialIndex":1}